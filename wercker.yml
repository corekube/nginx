build:
  box: nginx
  # The steps that will be executed in the BUILD pipeline
  steps:
    # Copy conf files to proper location where nginx expects them
    - script:
        name: assemble env
        code: |
          cp start.sh /usr/src/
          cp nginx/nginx.conf /etc/nginx/
          cp nginx/proxy*.conf /usr/src/

    # Test nginx configuration
    - script:
        name: test nginx.conf
        code: |
          mkdir -p /etc/nginx-ssl-secret
          cp wercker/fake-ssl/* /etc/nginx-ssl-secret/
          cp /usr/src/proxy_ssl.conf /etc/nginx/conf.d/proxy.conf
          sed -i "s/{{SERVER_NAME}}/$SERVER_NAME/g;" /etc/nginx/conf.d/proxy.conf
          nginx -t -c /etc/nginx/nginx.conf

  # Notify slack of build status
  after-steps:
    # Install deps
    - install-packages:
        packages: curl
    # Notify slack
    - slack-notifier:
        url: $SLACK_URL
        channel: notifications
        username: wercker

deploy:
  box: nginx
  # The steps that will be executed in the DEPLOY pipeline
  steps:
    # Copy conf files to proper location where nginx expects them
    - script:
        name: copy conf files & setup scripts
        code: |
          cp start.sh /usr/src/
          cp nginx/nginx.conf /etc/nginx/
          cp nginx/proxy*.conf /usr/src/

    # Build & push a container
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        tag: $WERCKER_GIT_COMMIT
        ports: "5000"
        repository: $DOCKER_REPO
        registry: $DOCKER_REGISTRY
        entrypoint: /usr/src/start.sh

  # Notify slack of build status
  after-steps:
    # Install deps
    - install-packages:
        packages: curl
    # Notify slack
    - slack-notifier:
        url: $SLACK_URL
        channel: notifications
        username: wercker
