build:
  box: nginx

  # The steps that will be executed in the BUILD pipeline
  steps:
    - install-packages:
      packages: curl openssh-client wget
    - add-ssh-key:
        keyname: KUBERNETES_SSH_KEY
    - add-to-known_hosts:
        hostname: $KUBERNETES_MASTER_PUBLIC_IP
        fingerprint: $KUBERNETES_MASTER_FINGERPRINT1
    - add-to-known_hosts:
        hostname: $KUBERNETES_MASTER_PUBLIC_IP
        fingerprint: $KUBERNETES_MASTER_FINGERPRINT2

    # Copy conf files to proper location where nginx expects them
    - script:
        name: configure nginx
        code: |
          ./hack/setup-nginx.sh

    # Unit tests
    - script:
        name: unit tests
        code: |
          ./hack/test-nginx.sh

    # Setup kubectl
    - script:
        name: download & setup kubectl
        code: |
          ./hack/setup-kubectl.sh

    # Integration tests
    - script:
        name: integration tests
        code: |
          ./hack/test-integrations.sh

  # Notify slack of build status
  after-steps:
    # Notify slack
    - slack-notifier:
        url: $SLACK_URL
        channel: notifications
        username: wercker

deploy:
  box: nginx

  # The steps that will be executed in the DEPLOY pipeline
  steps:
    - install-packages:
      packages: curl

    # Copy conf files to proper location where nginx expects them
    - script:
        name: configure nginx
        code: |
          ./hack/setup-nginx.sh

    # Build & push a container
    - internal/docker-push:
        disable-sync: true
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        tag: $WERCKER_GIT_COMMIT
        ports: "5000"
        repository: $DOCKER_REPO
        registry: $DOCKER_REGISTRY
        entrypoint: /usr/src/start.sh

  # Notify slack of build status
  after-steps:
    # Notify slack
    - slack-notifier:
        url: $SLACK_URL
        channel: notifications
        username: wercker
